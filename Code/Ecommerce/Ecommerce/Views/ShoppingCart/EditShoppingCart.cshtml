
@model CheckoutViewModel
@{
    ViewData["Title"] = "EditShoppingCart";
    Layout = "~/Views/Shared/_Layout.cshtml";
    decimal sum = 0m;
}

@section Styles{
    <style>
        .img-col {
            display: inline-block;
            width: 100%;
            height: 80px;
        }

        @@media only screen and (max-width:768px) and (min-width:200px) {
            .img-col {
                height: 280px;
            }
        }

        @@media only screen and (max-width:400px) and (min-width:200px) {
            .img-col {
                height: 160px;
            }
        }

        .product-details > * {
            background-color: whitesmoke;
            border-right: 1px solid white;
            border-bottom: 1px solid white;
        }

        .header {
            background-color: white;
            border-right: 1px solid white;
            border-bottom: 1px solid white;
        }

        .first-col-rborder {
            border-right: 1px solid whitesmoke;
        }

        .first-header-rborder {
            border-right: 1px solid white;
        }

        .desc-overflow {
            white-space: nowrap;
            width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;
            font-size: 16px;
        }

        .remove-from-cart {
            color: #f63440;
            display: inline-block;
        }

            .remove-from-cart:hover {
                transform: scaleY(1.1);
                cursor: pointer;
            }

            .remove-from-cart:active {
                transform: scaleY(1.2);
            }

            .remove-from-cart img {
                display: inline-block;
                width: 20px;
                height: 20px;
            }

        .cart-product-details span {
            color: #f63440;
        }

        .product-name-header {
            font-family: Tahoma;
            font-size: 15px;
            font-weight: bold;
            color: black;
        }

        .select-quantity {
            height: 40px;
            background-color: whitesmoke;
        }

        .price-col-style {
            font-family: sans-serif;
            font-size: 16px;
            color: black;
        }

        .header-style {
            font-family: sans-serif;
            font-size: 16px;
            font-weight: bold;
            color: #a19f9f;
        }

        .total-word {
            font-family: Tahoma;
            font-size: 20px;
            color: black;
        }

        .total-price {
            font-family: Tahoma;
            font-size: 22px;
            font-weight: bold;
            color: #f63440;
        }

        .continue-btns {
            background-color: whitesmoke;
        }

        .continue-checkout-btn {
            font-weight: bold;
            -webkit-box-shadow: 0 10px 6px -6px #777;
        }

        .continue-shopping-btn {
            font-weight: bold;
            -webkit-box-shadow: 0 10px 6px -6px #777;
        }

        .cart-img-div {
            width: 180px;
            height: 180px;
            border-radius: 50%;
            background-color: whitesmoke;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .cart-img {
            display: block;
            width: 120px;
            height: 120px;
        }

        .empty-cart {
            font-family: Verdana, Geneva, Tahoma, sans-serif;
            font-size: 18px;
            font-weight: bold;
        }
    </style>

}
<div class="container">

    @if (Model != null)
    {
        if (Model.CartProducts != null && Model.CartProductIDs.Count() > 0)
        {
            <!-- Start Cart Header-->
            <div class="row d-flex justify-content-center mt-5 mb-2">
                <div class="col-md-10">
                    <div class="row header">
                        <div class="col-md-2 d-flex first-header-rborder justify-content-center justify-content-md-start ">
                            <p class="header-style">ITEM</p>
                        </div>
                        <div class="col-md-4 "> </div>
                        <div class="col-md-2 d-flex justify-content-center align-items-center">
                            <p class="header-style">QUANTITY</p>
                        </div>
                        <div class="col-md-2 d-flex justify-content-center align-items-center">
                            <p class="header-style">UNIT PRICE</p>
                        </div>
                        <div class="col-md-2 d-flex justify-content-center align-items-center">
                            <p class="header-style">SUBTOTAL</p>
                        </div>
                    </div>
                </div>
            </div><!-- End Cart Header-->
            <!-- Start loop items in cart-->
            foreach (var item in Model.CartProducts)
            {

                var quantity = Model.CartProductIDs.Count(x => x == item.ProductId);
                <!-- Start item in cart-->
                <div class="row d-flex justify-content-center mb-4 mb-md-2">
                    <div class="col-md-10">
                        <div class="row product-details">
                            <div class="col-md-2 p-2 first-col-rborder"><img src="~/Home/images/@item.ProductImgUrl" class="img-col" /></div>
                            <div class="col-md-4 p-2">
                                <p class="product-name-header">@item.ProductName</p>
                                <p class="desc-overflow">@item.ProductDescrition</p>
                                <div>
                                    <div class="remove-from-cart ml-2" onclick="deleteCK(this)" data-id="@item.ProductId">
                                        <i class="fa fa-trash" aria-hidden="true"></i>
                                        <span>Remove</span>
                                    </div>
                                    <a class="remove-from-cart cart-product-details ml-2 ml-sm-5"
                                       asp-action="PrdDetails" asp-controller="Product" asp-route-id="@item.ProductId">
                                        <i class="fa fa-info-circle" aria-hidden="true"></i>
                                        <span>Details</span>
                                    </a>
                                </div>
                            </div>
                            <div class="col-md-2 p-4">
                                <select class="select-quantity" onchange="changeQuantity(this)" data-id="@item.ProductId">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (quantity == i)
                                        {
                                            <option value="@i" selected>@i</option>
                                        }
                                        else
                                        {
                                            <option value="@i">@i</option>
                                        }

                                    }
                                </select>
                            </div>
                            <div class="col-md-2 d-flex justify-content-center align-items-center">
                                <p class="price-col-style"><span>EGP </span>@Convert.ToInt32(item.ProductUnitPrice)</p>
                            </div>
                            <div class="col-md-2 d-flex justify-content-center align-items-center">
                                <p class="price-col-style">
                                    @*<span>EGP </span>*@
                                    @*@(Convert.ToInt32(item.ProductUnitPrice*quantity))*@
                                    @if (item.OfferId == null)
                                    {
                                        var priceInt = Math.Round(item.ProductUnitPrice, 0);
                                        <span>EGP @(priceInt*quantity)</span>
                                        sum += (priceInt * quantity);
                                    }
                                    else
                                    {
                                        var sale = item.ProductUnitPrice * (item.Offer.Sale / 100m);
                                        <span>EGP @(Math.Round(item.ProductUnitPrice-sale,2)*quantity)</span>
                                        sum += (Math.Round(item.ProductUnitPrice - sale, 2) * quantity);
                                    }
                                </p>
                            </div>
                        </div>
                    </div>
                </div> <!-- End item in cart-->
            } <!-- End loop items in cart-->
            <!-- Start Total Price-->
            <div class="row d-flex mt-5 mb-3">
                <div class="col-xs-1 offset-2">
                    <p class="total-word">Total :  </p>
                </div>
                <div class="col-xs-3 offset-sm-1">
                    <p class="total-price">
                        <span> EGP </span>
                        @*@Convert.ToInt32(Model.CartProducts.Sum(x => x.ProductUnitPrice * Model.CartProductIDs.Count(p => x.ProductId == p)))*@
                        @Math.Round(sum, 2)
                    </p>
                </div>
            </div><!-- End Total Price-->

        }

    }

</div>
@if (Model != null)
{
    if (Model.CartProducts != null && Model.CartProductIDs.Count() > 0)
    {
        <!-- Start Continue Buttons-->
        <div class="container-fluid">
            <div class="row my-5 continue-btns p-4">
                <div class="col-lg-3 ml-lg-5 mb-3 mb-lg-0">
                    <a asp-action="Index" asp-controller="Home">
                        <button type="button" class="btn  btn-outline-danger btn-block continue-shopping-btn">CONTINUE SHOPPING</button>
                    </a>
                </div>
                <div class="col-lg-3 ml-lg-5">
                    <a asp-action="Index" asp-controller="Home">
                        <button class="btn continue-checkout-btn btn-block">CONTINUE TO CHECKOUT</button>
                    </a>
                </div>
            </div>
        </div>
        <!-- End Continue Buttons-->
    }
    else
    {
        <!--Start empty cart-->
        <div class="container d-flex justify-content-around my-5">
            <div class="row my-5">
                <div class="col">
                    <div class="cart-img-div">
                        <img src="~/Home/icon/shopping-cart.png" class="cart-img" />
                        @*<i class="fa fa-cart-plus" aria-hidden="true" style="font-size:135px;"></i>*@
                    </div>
                    <div class="my-5">
                        <p class="d-flex justify-content-center empty-cart">Your cart is empty!</p>
                    </div>
                    <div class="mt-3 d-flex justify-content-center">
                        <a asp-action="Index" asp-controller="Home">
                            <button>Start Shopping</button>
                        </a>
                    </div>
                </div>
            </div>

        </div> <!--End empty cart-->

    }

}
else
{
    <!--Start empty cart-->
    <div class="container d-flex justify-content-around my-5">
        <div class="row my-5">
            <div class="col">
                <div class="cart-img-div">
                    <img src="~/Home/icon/shopping-cart.png" class="cart-img" />
                </div>
                <div class="my-5">
                    <p class="d-flex justify-content-center empty-cart">Your cart is empty!</p>
                </div>
                <div class="mt-3 d-flex justify-content-center">
                    <a asp-action="Index" asp-controller="Home">
                        <button>Start Shopping</button>
                    </a>
                </div>
            </div>
        </div>

    </div> <!--End empty cart-->
}

<script>
    var products;
    function deleteCK(e) {

        var existingCookieData = $.cookie('CartProducts');
        if (existingCookieData != undefined && existingCookieData != "" && existingCookieData != null) {

            products = existingCookieData.split('-');
        } else {
            products = [];
        }
        var productID = $(e).attr('data-id');
        //products.push(productID);
        //////new
        products = $.grep(products, function (value) {
            return value != productID;
        });

        $.cookie('CartProducts', products.join('-'), { path: '/' });
        updateCartProducts();
        alert("Product Deleted");
        location.reload();

    };
</script>
<script>
    var products;
    function changeQuantity(e) {

        var existingCookieData = $.cookie('CartProducts');
        if (existingCookieData != undefined && existingCookieData != "" && existingCookieData != null) {

            products = existingCookieData.split('-');
        } else {
            products = [];
        }
        var productID = $(e).attr('data-id');
        var size = $(e).val();

        //////new
        products = $.grep(products, function (value) {
            return value != productID;
        });
        for (var i = 0; i < size; i++) {
            products.push(productID);
        }
        $.cookie('CartProducts', products.join('-'), { path: '/' });
        //alert(size);

        updateCartProducts();
        location.reload();

    };
</script>
